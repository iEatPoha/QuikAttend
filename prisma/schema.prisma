// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String
  role     Role
  year     String? // Academic year: "1st", "2nd", "3rd", "4th" (for students only)
  branch   String? // Academic branch: "CSE", "ECE", "MECH", etc. (for students only)
  
  // Relations
  teacherClasses Class[] @relation("TeacherClasses")
  studentAttendance Attendance[] @relation("StudentAttendance")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Timeslot {
  id          String @id @default(cuid())
  year        String // Academic year: "1st", "2nd", "3rd", "4th"
  branch      String // Academic branch: "CSE", "ECE", "MECH", etc.
  dayOfWeek   Int // 0 = Sunday, 1 = Monday, etc.
  startTime   String // Format: "HH:MM"
  endTime     String // Format: "HH:MM"
  
  // Relations
  classes     Class[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([year, branch, dayOfWeek, startTime])
}

model Class {
  id          String @id @default(cuid())
  teacherId   String
  subject     String
  year        String // Academic year: "1st", "2nd", "3rd", "4th"
  branch      String // Academic branch: "CSE", "ECE", "MECH", etc.
  timeslotId  String
  date        DateTime
  qrCode      String?
  qrExpiry    DateTime?
  status      ClassStatus @default(SCHEDULED)
  
  // Relations
  teacher     User @relation("TeacherClasses", fields: [teacherId], references: [id])
  timeslot    Timeslot @relation(fields: [timeslotId], references: [id])
  attendance  Attendance[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([teacherId, timeslotId, date])
}

model Attendance {
  id        String @id @default(cuid())
  studentId String
  classId   String
  status    AttendanceStatus
  
  // Relations
  student   User @relation("StudentAttendance", fields: [studentId], references: [id])
  class     Class @relation(fields: [classId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([studentId, classId])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  CANCELLED
}

enum ClassStatus {
  SCHEDULED
  ACTIVE
  COMPLETED
  CANCELLED
}
